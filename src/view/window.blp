using Gtk 4.0;
using Adw 1;

template $PassesWindow: Adw.ApplicationWindow
{
  default-width: 1110;
  default-height: 600;
  // Minimum size of the window
  width-request: 360;
  height-request: 294;

  Adw.Breakpoint
  {
    condition ("max-width: 676sp")

    setters
    {
      main_split_view.collapsed: true;
    }
  }

  Adw.Breakpoint
  {
    condition ("min-width: 1008sp")

    setters
    {
      info_button.visible: false;
      inner_split_view.collapsed: false;
    }
  }

  content: Adw.ToastOverlay toast_overlay
  {
    Adw.NavigationSplitView main_split_view
    {
      sidebar: Adw.NavigationPage
      {
        title: _("Passes");

        Adw.ToolbarView
        {
          width-request: 332;

          [top]
          Adw.HeaderBar main_header_bar
          {
            [start]
            Gtk.Button
            {
              action-name: "app.import";
              can-focus: false;
              icon-name: "list-add-symbolic";
              tooltip-text: _("Import a Pass");
              visible: true;
            }

            [end]
            Gtk.MenuButton
            {
              icon-name: "open-menu-symbolic";
              menu-model: primary_menu;
              tooltip-text: _("Menu");
            }
          }

          content: Gtk.ScrolledWindow
          {
            hscrollbar-policy: never;

            Gtk.Viewport
            {
              scroll-to-focus: true;

              $PassList pass_list {}
            }
          };
        }
      };

      content: Adw.NavigationPage
      {
        width-request: 294;

        Adw.OverlaySplitView inner_split_view
        {
          sidebar-width-fraction: 0;
          sidebar-position: end;
          min-sidebar-width: 300;
          max-sidebar-width: 1000;
          collapsed: true;

          content: Adw.NavigationPage
          {
            Adw.ToolbarView
            {

              [top]
              Adw.HeaderBar
              {
                [end]
                Gtk.MenuButton
                {
                  icon-name: "view-more-symbolic";
                  menu-model: secondary_menu;
                }

                [end]
                Gtk.Button info_button
                {
                  icon-name: "info-symbolic";
                  tooltip-text: _("Show Additional Information");
                }

                [end]
                Gtk.Button update_button
                {
                  action-name: "app.update";
                  icon-name: "view-refresh-symbolic";
                  tooltip-text: _("Update Pass");
                }
              }

              content: $PassWidget pass_widget {};
            }
          };

          sidebar: Adw.NavigationPage info_panel
          {
            title: _("Additional Information");
            width-request: 332;

            Adw.ToolbarView
            {
              [top]
              Adw.HeaderBar
              {
                show-back-button: false;

                [start]
                Gtk.Button back_button
                {
                  icon-name: "go-previous-symbolic";
                  tooltip-text: _("Back");
                  valign: center;
                  visible: bind inner_split_view.collapsed;
                }
              }

              $AdditionalInformationPane pass_additional_info {}
            }
          };
        }
      };
    }
  };
}

menu primary_menu
{
  section
  {
    submenu
    {
      label: _("Sort");

      item
      {
        action: "win.sort";
        target: "description";
        label: _("Alphabetical");
      }

      item
      {
        action: "win.sort";
        target: "creator";
        label: _("Creator");
      }

      item
      {
        action: "win.sort";
        target: "expiration_date";
        label: _("Expiration Date");
      }

      item
      {
        action: "win.sort";
        target: "relevant_date";
        label: _("Relevant Date");
      }
    }
  }

  section
  {
    item (_("Keyboard Shortcuts"), "win.show-help-overlay")
    item (_("About Passes"), "app.about")
  }
}

menu secondary_menu
{
  item (_("Delete"), "app.delete")
}
